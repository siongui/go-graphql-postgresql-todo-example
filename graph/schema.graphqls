# GraphQL schema example
#
# https://gqlgen.com/getting-started/

"DateTime ...(desciption to be added)"
scalar DateTime

"Todo represents one todo item"
type Todo {
    id: Int
    content_code: String
    content_name: String
    description: String
    start_date: DateTime
    end_date: DateTime
    status: String
    created_by: String
    created_date: DateTime
    updated_by: String
    updated_date: DateTime
}

"TodoInput is used to create or update todo item"
input TodoInput {
    content_code: String
    content_name: String
    description: String
    start_date: DateTime
    end_date: DateTime
    status: String
    created_by: String
    updated_by: String
}

"TodoSearchInput is used to search todo items in database"
input TodoSearchInput {
    content_code: String
    content_name: String
    start_date: DateTime
    end_date: DateTime
    status: String
}

"PaginationInput ...(desciption to be added)"
input PaginationInput {
    count: Int! = 10
    page: Int! = 1
}

"TodoPagination is paginated todo items"
type TodoPagination {
    PaginationInfo: PaginationInfo!
    Todos: [Todo!]!
}

"PaginationInfo represents pagination information"
type PaginationInfo {
    total_count: Int!
    current_page: Int!
    total_pages: Int!
}

"Query request"
type Query {
    "Find todo by id"
    getTodo(
        "id of the record"
        id: Int!
    ): Todo

    "Offset based pagination of todo list"
    TodoPages(
        "pagination input"
        paginationInput: PaginationInput! = {count: 10, page: 1}
    ): TodoPagination!

    TodoSearch(
        "search filters"
        input: TodoSearchInput!,

        "pagination input"
        paginationInput: PaginationInput! = {count: 10, page: 1}
    ): TodoPagination!
}

"Mutation request"
type Mutation {
    "Create a new todo"
    createTodo(
        "input for creating todo item"
        input: TodoInput!
    ): Todo

    "Update existing todo"
    updateTodo(
        "id of the record"
        id: Int!,

        "input for updating todo item"
        input: TodoInput!
    ): Todo
}
